process TEST = {

	
	source = DaqSource{ string reader = "DTROS25FileReader"
   		    	    untracked int32 maxEvents = -1
          		    PSet pset = { string fileName ="ros25.raw" }
	}

       	module dtunpacker = DTUnpackingModule{ 
		string dataType = "ROS25" 
		untracked bool performDataIntegrityMonitor = true
	}

        service = DTDataIntegrityTask{
		untracked int32 timeBoxLowerBound = 20000
		untracked int32 timeBoxUpperBound = 30000
	}

        service = DaqMonitorROOTBackEnd{}

        service = MonitorDaemon{
        # if true, will automatically start DQM thread in background
        untracked bool AutoInstantiate=true

        # if >=0, upon a connection problem, the source will automatically
        # attempt to reconnect with a time delay (secs) specified here
        # (default: 5)
        untracked int32 reconnect_delay = 5

        # collector hostname; examples:localhost(default),lxcmse2.cern.ch, etc
        #untracked string DestinationAddress = "lxplus008.cern.ch"
	untracked string DestinationAddress = "localhost"	

        # port for communicating with collector (default: 9090)
        untracked int32 SendPort = 9090

        # monitoring period in ms (i.e. how often monitoring elements
        # are shipped to the collector; default: 1000)
        untracked int32 UpdateDelay = 3000

        # name of DQM source (default: DQMSource)
        untracked string NameAsSource = "FU0"
        }

        module out = PoolOutputModule {
               untracked string fileName ="dtdigi.root"
        }

        path p = {dtunpacker}

}